// TODO nf-core: Once you have added the required tests, please run the following command to build this file:
// nf-core modules test svanalyzer/svbenchmark
nextflow_process {

    name "Test Process SVANALYZER_SVBENCHMARK"
    script "../main.nf"
    process "SVANALYZER_SVBENCHMARK"

    tag "modules"
    tag "modules_nfcore"
    tag "svanalyzer"
    tag "svanalyzer/svbenchmark"

    test("homo_sapiens - illumina - vcf.gz") {

        when {
            params {
                outdir = $outputDir
            }
            process {
                """
                    input[0] = [
                        [ id:'test' ], // meta map
                        file(params.test_data['homo_sapiens']['illumina']['test_test2_paired_mutect2_calls_vcf_gz'], checkIfExists: true)
                        ]
                    input[1] = [
                        [ id:'test2' ], // meta map
                        file(params.test_data['homo_sapiens']['illumina']['test2_haplotc_vcf_gz'], checkIfExists: true)
                        ]
                    input[2] = [
                        file(params.test_data['homo_sapiens']['genome']['genome_21_fasta'], checkIfExists: true)
                        ]
                    input[3] = [
                        file(params.test_data['homo_sapiens']['genome']['genome_21_fasta_fai'], checkIfExists: true)
                        ]
                    input[4] = []
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }
    test("homo_sapiens - illumina - vcf.gz - bed") {

        when {
            params {
                outdir = $outputDir
            }
            process {
                """
                    input[0] = [
                        [ id:'test' ], // meta map
                        file(params.test_data['homo_sapiens']['illumina']['test_test2_paired_mutect2_calls_vcf_gz'], checkIfExists: true)
                        ]
                    input[1] = [
                        [ id:'test2' ], // meta map
                        file(params.test_data['homo_sapiens']['illumina']['test2_haplotc_vcf_gz'], checkIfExists: true)
                        ]
                    input[2] = [
                        file(params.test_data['homo_sapiens']['genome']['genome_21_fasta'], checkIfExists: true)
                        ]
                    input[3] = [
                        file(params.test_data['homo_sapiens']['genome']['genome_21_fasta_fai'], checkIfExists: true)
                        ]
                    input[4] = [
                        file(params.test_data['homo_sapiens']['genome']['genome_21_multi_interval_bed'], checkIfExists: true)
                        ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }

    }

}
